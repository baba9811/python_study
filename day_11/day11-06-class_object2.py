"""
파일명 : day11-06-class_object2
개요 : 클래스와 객체
page : 260 ~ 263
"""

'''
1. 객체의 개념
- 개발을 하다보면 정수나 실수 또는 문자열 등 기본적인 자료형으로 표현하기 힘든 것들이 생김.

예시 ) 홈페이지 게시물 
- 홈페이지 게시물은 다음과 같은 정보가 포함되어야합니다.
* 게시글 번호
* 제목
* 작성자
* 비밀번호
* 내용
* 최초작성일자
* 최종수정일자
* 조회수

- 반대로 생각해서 위에 정보가 주어지면 요건 게시물이야! 라고 생각하면됨.

- 서로 다른 많은 데이터를 하나로 묶어서 표현한 것 = 객체
( 주변에서 흔히 보는 모든 것들이 대부분 객체라고 생각하면됩니다. ) 
'''

'''
2. 클래스의 개념
클래스(class) == 객체를 만드는 도구
하나의 클래스를 만들어두면 그 클래스를 통해서 여러 개의 객체를 만들 수 있습니다.

책 예시 ) 와플머신과 와플의 관계
( 와플 == 객체 )
( 와플 머신 == 클래스 )
같은 와플 머신이라도 다른 모양과 크기를 가진 와플이 만들어 지듯,
클래스와 객체도 마찬가지로 같은 클래스로 만든 객체여도 객체들은 서로 다른 값을 
가질 수 있습니다

* 인스턴스 == 클래스를 이용해서 생성한 객체
- 관점의 차이일 뿐 사실상 객체와 동일한 용어로 간주하고 사용해도 무관

[ 관전의 차이 ]
'와플머신' (클래스)로 만든 '와플'은 (객체)
'*와플'은 '**와플머신' (**클래스)의 (*인스턴스)
'''

'''
3. 클래스 정의 
클래스를 작성하는 것을 클래스 정의라고 함.

[ 정의 방법 ]
1. class 키워드로 클래스를 정의
2. 클래스 이름은 Upper Camel Case 규칙을 따름.

[ Upper Camel Case ]
- 파이썬은 변수, 함수의 이름을 네이밍할때 언더바(_)를 이용해서 단어를 연결하는 Snake Case을
    사용합니다.
- 클래스 이름만은 이 방식을 따르지 않고 합성할 각 단어들의 첫 글자만 대문자로 표시합니다.
- 각 단어들의 첫 글자를 제외한 나머지 글자는 모두 소문자로 표시
- 공백, 언더바(_) 없이 작성

[ 기본 구조 ]
class 클래스명:
    본문
    
* 클래스 또한 들여쓰기 문법을 따름.
'''

'''
4. 객체 생성
- 클래스가 정의된 순간부터는 객체를 생성할 수 있음.

[ 생성 방법 ]
객체 = 클래스()
* 2개의 객체를 만들고 싶으면 아래와 같이 작업
객체1 = 클래스()
객체2 = 클래스()
'''

'''
5. 클래스 정의와 객체 생성
'''

# pass == 아무 일도 하지않고 넘어가겠다.
# 추후에 코드를 넣어야하면 지우고 실제 필요한 코드 작성
class WaffleMachine:
    pass

waffle = WaffleMachine()

print(waffle)



































