"""
파일명 : day05-06-loop6
개요 : 응용 문제
page : 129 ~ 130
"""

'''
책 예제 ) 1부터 5 사이에 존재하는 모든 정수를 역순으로 출력하는 프로그램을 구현하세요.
출력 :
5
4
3
2
1
'''

# i = 5
# for item in range(5):
#     print(i)
#     i -= 1

# for item in range(5, 0, -1):
#     print(item)

'''
책 예제 ) 사용자로부터 임의의 양의 정수를 하나 입력받은 뒤 1부터 입력받은 정수까지
모든 정수의 합계를 출력하는 프로그램을 구현하세요.

예시 출력:
임의의 양수를 입력하세요 >>>5
1부터 5사이 모든 정수의 합계는 15입니다.
- 입력받은 수가 0보다 같거나 작으면 아래와 같이 출력
임의의 양수를 입력하세요 >>>0
해당 값은 0보다 작거나 같습니다. 양의 정수를 입력해주세요.
( 종료 )
'''

# num = int(input('임의의 양수를 입력하세요 >>>'))
# if num <= 0:
#     print('해당 값은 0보다 작거나 같습니다. 양의 정수를 입력해주세요.')
# else:
#     total = 0 # 입력받은 양수까지 정수들의 합계가 저장되는 곳
#
#     for i in range(1, (num + 1)):
#         total += i
#
#     print(f'1부터 {num}사이 모든 정수의 합계는 {total}입니다.')

'''
책 예제 ) 사용자로부터 임의의 양의 정수를 하나 입력받은 뒤 그 숫자만큼 '과일 이름'을
입력받아 'basket'리스트에 저장하는 프로그램을 구현하세요.
* 응용 ) 중복된 과일은 숫자에 쳐주지 않음 
예시 출력:
몇 개의 과일을 보관할까요?? >>3
1번째 과일을 입력하세요 >>>사과
2번째 과일을 입력하세요 >>>바나나
3번째 과일을 입력하세요 >>> 체리
입력받은 과일들은 ['사과', '바나나', '체리'] 입니다.
'''

# set (), while
# list()
# count = int(input('몇 개의 과일을 보관할까요?? >>>'))
# basket = []
# for i in range(1, count + 1):
#     fruit = input(f'{i}번째 과일을 입력하세요 >>>')
#     basket.append(fruit)
#
# print(f'입력받은 과일들은 {basket} 입니다.')

'''
책 예제 ) 중간고사 성적이 발표되었습니다.
한 반에 총 10명의 학생이 있고, 각 학생의 국어 점수를 번호순으로 나열하면
다음과 같습니다. 
exam = [99, 78, 100, 91, 81, 85, 54, 100, 71, 50]

100점을 받은 학생의 점수를 제외한 나머지 학생들의 점수를 5점씩 증가시킨 
'score'리스트를 생성하고 출력하는 프로그램을 구현하세요.
단, 증가된 점수가 100점이 초과하지 않도록 처리하세요.
# Hint: min() 함수 이용 xxx 
'''

# exam = [99, 78, 100, 91, 81, 85, 54, 100, 71, 50]
# score = []
#
# for i in exam:
#     # i + 5를 미리 변수에 담지 않고 처리한거.
#     if (i + 5) > 100:
#         score.append(100)
#     else:
#         score.append(i + 5)
# print(score)

'''
책 예제 ) 1부터 99사이의 모든 정수를 대상으로 369게임의 결과를 출력하는 프로그램을
구현해봐라!!!
* 3의 배수를 찾는게 아니다. 
* 십의 자리와 일의 자리를 분리해서 생각해봐야함!!
응용 ) 369아닌거 * 369 컴퓨터랑 대결 ! 
십의 자리 = num // 10
일의 자리 = num % 10
출력 )
1	2	짝	4	5	짝	7	8	짝	10
11	12	짝	14	15	짝	17	18	짝	20
21	22	짝	24	25	짝	27	28	짝	짝
짝	짝	짝짝	짝	짝	짝짝	짝	짝	짝짝	40
41	42	짝	44	45	짝	47	48	짝	50
51	52	짝	54	55	짝	57	58	짝	짝
짝	짝	짝짝	짝	짝	짝짝	짝	짝	짝짝	70
71	72	짝	74	75	짝	77	78	짝	80
81	82	짝	84	85	짝	87	88	짝	짝
짝	짝	짝짝	짝	짝	짝짝	짝	짝	짝짝	
'''

# s = ''
# for i in range(1, 100):
#     tens = 0 # 십의 자리
#     units = 0 # 일의 자리
#     clap = '' # 값이 들어갈 자리
#
#     if i > 10:
#         tens = (i // 10) % 3 == 0 # intx boolo ( True or False )
#         if i % 10 != 0:
#             units = ( i % 10 ) % 3 == 0 # intx boolo ( True or False )
#
#         if tens:
#             clap += '짝'
#         if units:
#             clap += '짝'
#
#         if not tens and not units:
#             clap = str(i)
#
#     else:
#         units = ( i % 3 == 0)
#         if units:
#             clap += '짝'
#         if not units:
#             clap += str(i)
#
#     if i % 10 == 0:
#         s += f'{clap}\n'
#     else:
#         s += f'{clap}\t'
#
# print(s)

'''
예제 ) 비밀번호를 입력받아서 사용 가능한 비밀번호인지 
불가능한 비밀번호인지 판단하는 프로그램을 만들려고한다.

각 조건은 다음과 같다.
- 사용 가능한 비밀번호
    1. 숫자와 문자가 포함되어있어야함.
    2. 같은 숫자, 문자가 2개 이하면됨.
- 사용 불가능한 비밀번호
    1. 숫자와 문자가 전부 포함되어있지 않음.
    2. 같은 숫자, 문자가 3개 이상임.

예시 ) a1bbb = 같은 숫자, 문자(b)가 3개 이상이므로 사용 불가
      a1bb = 숫자, 문자 포함, 같은 숫자,문자가 2개 이하이므로 사용 가능
* dict 이용 
'''

pwd = input('비밀번호를 입력하세요 >>>')
d = {}

ch_count = 0     # 문자열
num_count = 0    # 숫자
overlap_pwd = 0  # 중복
# a1bbb
for ch in pwd:

    if ch not in d:
        d[ch] = 1
    else:
        d[ch] = d[ch] + 1

    if ch.isalpha():
        ch_count += 1
    elif ch.isnumeric():
        num_count += 1

print(d)

for i in d:
    if d[i] >= 3:
        overlap_pwd += 1

if ch_count > 0 and num_count > 0 and overlap_pwd == 0:
    print('가능!')
else:
    print('불가능!')
















